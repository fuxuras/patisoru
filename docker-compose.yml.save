version: "3.8"
services:
  springboot-app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - prometheus
      - redis  # Add Redis as a dependency
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/springboot_db
      SPRING_DATASOURCE_USERNAME: springuser
      SPRING_DATASOURCE_PASSWORD: springpass
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: true
      MANAGEMENT_SERVER_PORT: 8080
      SPRING_REDIS_HOST: redis  # Use the service name as the hostname
      SPRING_REDIS_PORT: 6379
    networks:
      - my_network

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: springuser
      POSTGRES_PASSWORD: springpass
      POSTGRES_DB: springboot_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - my_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - my_network

  redis:  # Add the Redis service
    image: redis:latest  # Use the latest stable Redis image
    ports:
      - "6379:6379"  # Expose the default Redis port
    volumes:
      - redis_data:/data  # Persist Redis data (IMPORTANT)
    networks:
      - my_network


volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  redis_data:  # Add volume for Redis data

networks:
  my_network:
    driver: bridge
